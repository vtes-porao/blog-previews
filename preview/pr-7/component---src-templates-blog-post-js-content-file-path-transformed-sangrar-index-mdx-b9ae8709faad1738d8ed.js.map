{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-transformed-sangrar-index-mdx-b9ae8709faad1738d8ed.js","mappings":"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","sources":["webpack://blog/./node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.3.1/node_modules/@mdx-js/react/lib/index.js","webpack://blog/./src/components/card.js","webpack://blog/./transformed/sangrar/index.mdx","webpack://blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import * as React from \"react\";\n\nconst Card = (props) => {\n  return (\n    <span className=\"px-[2px] font-bold cursor-pointer border-sky-300 border-b-2 hover:border-sky-500\">\n      {props.name}\n    </span>\n  );\n};\n\nexport default Card;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Card from '../../src/components/card.js';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Como sangrar (e ser sangrado) corretamente\"), \"\\n\", React.createElement(_components.p, null, \"No jogo de \", React.createElement(_components.em, null, \"V:TES\"), \", para conseguir Pontos de Vitória (VPs), você precisa reduzir a quantidade de Pool da sua presa a 0. A maneira mais simples de fazer isso é com uma ação de \", React.createElement(_components.strong, null, \"sangrar.\"), \" A ação de sangrar foi a primeira ação que vi sendo realizada no meu primeiro jogo, e a primeira vista, parecia simples. Você vira seu vampiro, declara que está sangrando sua presa, e a mesma pode tentar interceptar ou não. Caso você conseguisse gerar mais furtividade do que a interceptação da sua presa, o sangrar era um sucesso e sua presa perderia então 1 de recurso.\"), \"\\n\", React.createElement(_components.p, null, \"Porém, conforme o tempo foi passando, percebi que é uma ação extremamente complexa (todas as ações no \", React.createElement(_components.em, null, \"V:TES\"), \" são mais complicadas do que parecem), e cheia de peculiaridades. Quando posso aumentar o sangrar? Quando posso reduzir? Quando posso passar o sangrar? Quando posso usar \", React.createElement(Card, {\n    name: \"Eagle's Sight\"\n  }), \"? Como é a interação entre \", React.createElement(Card, {\n    name: \"Spying Mission\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Archon Investigation\"\n  }), \"? Já vi diversos erros sendo cometidos durante uma ação de sangrar, e tenho certeza de que continuarei vendo e os cometendo. Esse guia tem o propósito de guiar jogadores a entenderem como realizar uma ação de sangrar, e como se comportar quando outro jogador está realizando uma ação de sangrar.\"), \"\\n\", React.createElement(_components.p, null, \"Esse guia pode servir como base para outras ações diretas também, embora contenha algumas peculiaridades da ação de sangrar.\"), \"\\n\", React.createElement(_components.h3, null, \"Antes de começar - O impulso\"), \"\\n\", React.createElement(_components.p, null, \"Antes de começarmos a falar sobre a ação de sangrar, é importante definirmos o que é o impulso e como ele funciona em um jogo de \", React.createElement(_components.em, null, \"V:TES\"), \". O impulso é um conceito que define quem tem o direito de jogar cartas e realizar ações. Embora num jogo comum de \", React.createElement(_components.em, null, \"V:TES\"), \" façamos diversos atalhos, para que o jogo seja jogado de forma mais ágil, é importante definir quais os direitos de cada jogador.\"), \"\\n\", React.createElement(_components.p, null, \"O impulso é passado para cada jogador, e um jogador só poderá jogar uma carta, ou realizar uma ação, quando estiver com o impulso. A exceção dessa regra se dá apenas durante um referendo (mais sobre isso em um post futuro).\"), \"\\n\", React.createElement(_components.p, null, \"O impulso, por padrão, começa com o jogador agente. Ao jogar uma carta, antes da reposição, o impulso é passado para os outros jogadores, no sentido horário. É nesse momento que cartas com o texto \", React.createElement(_components.em, null, \"as it is played\"), \" podem ser jogadas. Isso inclui cartas que cancelam a carta de ação jogada, como \", React.createElement(Card, {\n    name: \"Direct Intervention\"\n  }), \". Além das cartas com texto \", React.createElement(_components.em, null, \"as it is played\"), \", cartas de acordar também podem ser utilizadas, como \", React.createElement(Card, {\n    name: \"On the Qui Vive\"\n  }), \". Note que, se qualquer jogador jogar uma outra carta, qualquer ela que seja, novamente o impulso é passado entre todos os outros jogadores antes que o mesmo possa jogar sua próxima carta.\"), \"\\n\", React.createElement(_components.p, null, \"Após o impulso passar por todos os jogadores, \", React.createElement(_components.strong, null, \"reponha a carta jogada\"), \". Após a reposição, o impulso volta para o jogador agente, indepente de quem jogou a carta.\"), \"\\n\", React.createElement(_components.p, null, \"Ao fim de cada fase de jogo, o impulso deve ser pasasdo no sentido horário, até que todos os jogadores tenham recebido e passado o impulso sem jogar uma carta. Existe uma concepção em alguns jogadores de que é necessário \", React.createElement(_components.em, null, \"pedir\"), \" para que você possa agir durante o turno de outro jogador. Isso não é verdade e inclusive contraria o que está escrito nas regras a respeito do impulso. \", React.createElement(_components.strong, null, \"Você não precisa pedir permissão para outro jogador para agir no turno dele. Ao final da fase de servo, por exemplo, antes da fase de influência, o impulso passa em ordem horária e você pode jogar cartas ou realizar ações que esteja apto a realizar.\"), \" Exemplos de cartas que te dão direito de agir no turno de outro jogador são as cartas \", React.createElement(Card, {\n    name: \"Madness Network\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Enkil's Cog\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"Definido o que é o impulso, podemos passar então para a cronologia da ação de sangrar.\"), \"\\n\", React.createElement(_components.h3, null, \"1. Jogar uma carta de ação\"), \"\\n\", React.createElement(_components.p, null, \"Caso queira realizar uma ação de sangrar base do servo, pule para a próxima etapa. Caso queira realizar uma ação de sangrar de uma carta, siga as instruções abaixo.\"), \"\\n\", React.createElement(_components.p, null, \"Você pode realizar uma ação de sangrar jogando uma carta de ação, como \", React.createElement(Card, {\n    name: \"Govern the Unaligned\"\n  }), \", \", React.createElement(Card, {\n    name: \"The Platinum Protocol\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Break the Bonds\"\n  }), \". Para tal, coloque a carta na mesa e vire seu servo. \", React.createElement(_components.strong, null, \"NÃO JOGUE OUTRAS CARTAS E NEM REPONHA A CARTA JOGADA AINDA!\"), \" Aguarde o impulso passar (pela janela \", React.createElement(_components.em, null, \"as it is played\"), \"). Se sua carta de ação continuar na mesa, reponha ela e prossiga para a próxima etapa.\"), \"\\n\", React.createElement(_components.h3, null, \"2. Anunciar a ação\"), \"\\n\", React.createElement(_components.p, null, \"Anuncie agora qual a ação que está sendo realizada. Vire seu servo se você ainda não o fez. Se você jogou uma carta de ação, declare qual ação está sendo realizada. Agora, existe uma janela para se jogar cartas com o texto \", React.createElement(_components.em, null, \"as it is announced\"), \". Atualmente, só existem \", React.createElement(_components.em, null, \"modificadores de ação\"), \" com o texto \", React.createElement(_components.em, null, \"as it is announced\"), \", então somente o jogador agente pode jogar cartas nesse momento.\"), \"\\n\", React.createElement(_components.p, null, \"É nesse momento que cartas como \", React.createElement(Card, {\n    name: \"Seduction\"\n  }), \", \", React.createElement(Card, {\n    name: \"Memory Rift\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Unleashing the Bestial Soul\"\n  }), \" podem ser jogadas.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Aqui é um momento em que um erro comum é cometido. O jogador agente joga a carta de ação junto com Memory Rift. Outro jogador joga um Direct Intervention na ação.\"), \"\\n\", React.createElement(_components.p, null, \"Nesse caso, o jogador agente cometeu uma infração, pois não esperou o impulso passar e outro jogador poder responder a carta de ação. O jogador agente deve retornar o Memory Rift para \", React.createElement(_components.strong, null, \"sua mão\"), \" (e com sorte ele ainda não repôs nenhuma carta).\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"3. Bloqueio\"), \"\\n\", React.createElement(_components.h4, null, \"3.1. Tentativa de bloqueio\"), \"\\n\", React.createElement(_components.p, null, \"Após a ação ser anunciada, começa agora a janela de bloqueio. É nesse momento em que o jogador que está sendo alvo da ação direta pode tentar bloqueá-la, ou declinar o bloqueio.\"), \"\\n\", React.createElement(_components.p, null, \"A ação de sangrar tem \", React.createElement(_components.em, null, \"furtividade\"), \" base 0. Isso significa que, na maioria dos casos, qualquer servo destravado consegue bloquear a ação sem precisar gerar nenhuma \", React.createElement(_components.em, null, \"interceptação\"), \", pois os servos tem \", React.createElement(_components.em, null, \"interceptação\"), \" base 0.\"), \"\\n\", React.createElement(_components.p, null, \"O impulso começa com o jogador agente, que pode utilizar agora \", React.createElement(_components.em, null, \"modificadores de ação\"), \". Aqui, ele pode fazer a tentativa de bloqueio falhar e aumentar a \", React.createElement(_components.em, null, \"furtividade\"), \" do servo agente, \", React.createElement(_components.strong, null, \"APENAS SE NECESSÁRIO\"), \". Não é possível aumentar a \", React.createElement(_components.em, null, \"furtividade\"), \" caso a mesma já seja maior do que a \", React.createElement(_components.em, null, \"interceptação\"), \" do servo bloqueador (exceto se a carta disser o contrário).\"), \"\\n\", React.createElement(_components.p, null, \"O jogador agente também pode jogar \", React.createElement(_components.em, null, \"modificadores de ação\"), \" pertinentes ao aumento da quantidade do sangrar, ou efeitos adicionais, como \", React.createElement(Card, {\n    name: \"Invigorate\"\n  }), \".\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Ainda haverá uma outra janela para que esses efeitos sejam jogados, após o declinio do bloqueio. Se o jogador agente joga modificadores de ação que aumentam o sangrar agora, e a ação é bloqueada, essas cartas são \\\"perdidas\\\", enquanto que, se jogar na outra janela, já não há mais possibilidade de bloqueio.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Após terminar de jogar suas cartas, o jogador agente passa o impulso, que diferente da definição padrão, passa primeiro para o jogador bloqueador, e depois para os demais, em sentido horário a partir do jogador agente.\"), \"\\n\", React.createElement(_components.p, null, \"Os outros jogadores podem então jogar cartas de \", React.createElement(_components.em, null, \"reação\"), \". Assim como a \", React.createElement(_components.em, null, \"furtividade\"), \", um jogador só pode aumentar a \", React.createElement(_components.em, null, \"interceptação\"), \" caso seja necessário (exceto se a carta disser o contrário).\"), \"\\n\", React.createElement(_components.p, null, \"A tentativa de bloqueio termina normalmente quando o impulso é passado por todos os jogadores sem que mais nenhum jogue mais nenhuma carta ou realize mais nenhum efeito.\"), \"\\n\", React.createElement(_components.h4, null, \"3.2. Bloqueio bem-sucedido\"), \"\\n\", React.createElement(_components.p, null, \"Caso o servo bloqueador consiga bloquear a ação (sua \", React.createElement(_components.em, null, \"interceptação\"), \" é maior ou igual à \", React.createElement(_components.em, null, \"furtividade\"), \" do servo agente), existem mais duas janelas a serem respeitadas aqui. Primeiro, cartas com o texto \", React.createElement(_components.em, null, \"before block resolution\"), \" podem ser jogadas, novamente respeitando a ordem de impulso (o jogador agente sempre tem prioridade). Cartas como \", React.createElement(Card, {\n    name: \"Change of Target\"\n  }), \", \", React.createElement(Card, {\n    name: \"Power of One\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Mental Maze\"\n  }), \" podem ser jogadas nessa janela, e efeitos de cartas como \", React.createElement(Card, {\n    name: \"Mirror Walk\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Aching Beauty\"\n  }), \" também são ativados nessa janela.\"), \"\\n\", React.createElement(_components.p, null, \"Se a resolução do bloqueio continuar, um combate irá começar. Aqui, abre-se a janela \", React.createElement(_components.em, null, \"about to enter combat\"), \", em que se pode jogar cartas como \", React.createElement(Card, {\n    name: \"Obedience\"\n  }), \"  e \", React.createElement(Card, {\n    name: \"Gift of Sleep\"\n  }), \".\"), \"\\n\", React.createElement(_components.h4, null, \"3.3. Bloqueio malsucedido\"), \"\\n\", React.createElement(_components.p, null, \"Caso o servo bloqueador não consiga bloquear a ação (sua \", React.createElement(_components.em, null, \"interceptação\"), \" é menor do que a \", React.createElement(_components.em, null, \"furtividade\"), \" do servo agente), o jogador ainda pode tentar bloquear com outro servo. Para isso, basta declarar que o servo bloqueador desistiu de sua tentativa de bloqueio, e começar outra tentativa com outro servo.\"), \"\\n\", React.createElement(_components.p, null, \"Aqui, o jogador também pode novamente declinar novas tentativas de bloqueio. Um jogador pode declinar a tentativa de bloqueio \", React.createElement(_components.strong, null, \"mesmo que não tenha como bloquear mais. Ao não ter mais opções de servos bloqueador, um jogador mesmo assim é considerado como um jogador que declinou um bloqueio.\"), \" Isso é importante para cartas que virão na secção de \", React.createElement(_components.strong, null, \"Bloqueios declinados\"), \".\"), \"\\n\", React.createElement(_components.h4, null, \"3.4. Outros jogadores\"), \"\\n\", React.createElement(_components.p, null, \"Caso o jogador alvo decline o bloqueio, outros jogadores recebem o impulso. É nesse momento que um jogador pode jogar cartas como \", React.createElement(Card, {\n    name: \"Eagle's Sight\"\n  }), \" e \", React.createElement(Card, {\n    name: \"Falcon's Eyes\"\n  }), \", que permitem que um servo possa bloquear uma ação sem respeitar restrições de alvo.\"), \"\\n\", React.createElement(_components.h4, null, \"4. Bloqueios declinados\"), \"\\n\", React.createElement(_components.p, null, \"Após todos os jogadores declinarem o bloqueio, o impulso volta ao jogador agente. É nesse momento em que se abre uma nova janela para se jogar \", React.createElement(_components.em, null, \"modificadores de ação\"), \", e é aqui normalmente que veremos o jogador agente jogando cartas que aumentam o sangrar, como \", React.createElement(Card, {\n    name: \"Conditioning\"\n  }), \", \", React.createElement(Card, {\n    name: \"Monkey Wrench\"\n  }), \", \", React.createElement(Card, {\n    name: \"Aire of Elation\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Eyes of Chaos\"\n  }), \".\"), \"\\n\", React.createElement(_components.p, null, \"É importante notar que não se podem jogar múltiplas cartas que aumentam o sangrar, com exceção de cartas que especificam que não contam para o limite, como \", React.createElement(Card, {\n    name: \"Leverage\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Command of the Besat\"\n  }), \" com \\\\DOM.\\nOutro ponto importante é que cartas que aumentam o sangrar só são contadas para o limite quando estão aumentando o sangrar em pelo menos 1.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Se um jogador joga \", React.createElement(Card, {\n    name: \"Foreshadowing Destruction\"\n  }), \" com \\\\DOM e seu alvo consegue aumentar seus recursos para mais de 9, ou o novo alvo do sangrar tem mais de 9 de recursos, a carta para de contar para o total do sangrar, e uma nova carta limitada pode ser jogada. Após a nova carta ser jogada, se o total de recursos do alvo voltar a ser menor de 9, as duas cartas passam a contar para o aumento.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Após terminar de jogar suas cartas, o jogador agente passa o impulso, agora novamente na ordem padrão. Os jogadores agora podem jogar cartas de \", React.createElement(_components.em, null, \"reação\"), \" que influenciam a tentativa de sangrar. Exemplos de ações que podem ser tomadas aqui:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"O jogador pode reduzir o sangrar, com cartas como \", React.createElement(Card, {\n    name: \"Visions of Zapathasura\"\n  }), \", \", React.createElement(Card, {\n    name: \"Deep Ecology\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Party Out Of Bounds\"\n  }), \". O jogador agente pode então aumentar o sangrar novamente, respeitando ainda a regra de limite de cartas que aumentam o sangrar.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"O jogador pode fazer a ação falhar, com cartas como \", React.createElement(Card, {\n    name: \"Champion\"\n  }), \", \", React.createElement(Card, {\n    name: \"Hide the Heart\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Faerie Wards\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Queimar o servo agente, com \", React.createElement(Card, {\n    name: \"Archon Investigation\"\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"O jogador alvo da ação de sangrar pode redirecionar o sangrar para outro jogador, com cartas como \", React.createElement(Card, {\n    name: \"Deflection\"\n  }), \", \", React.createElement(Card, {\n    name: \"My Enemy's Enemy\"\n  }), \" ou \", React.createElement(Card, {\n    name: \"Bait and Switch\"\n  }), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"4.1. Redirecionando um sangrar\"), \"\\n\", React.createElement(_components.p, null, \"Ao redirecionar um sangrar, voltamos à etapa \\\"\", React.createElement(_components.strong, null, \"3.1 - Tentativa de bloqueio\"), \"\\\". Todos os jogadores recebem uma nova oportunidade de bloquear (e usar cartas como \", React.createElement(Card, {\n    name: \"Eagle's Sight\"\n  }), \", caso necessário)\"), \"\\n\", React.createElement(_components.p, null, \"Porém, algumas coisas se mantém. A ação ainda é a mesma, portanto quaisquer \", React.createElement(_components.em, null, \"modificadores de ação\"), \" e \", React.createElement(_components.em, null, \"reações\"), \" jogados continuam ativos.\"), \"\\n\", React.createElement(_components.p, null, \"Uma ação de sangrar pode ser redirecionada diversas vezes!\"), \"\\n\", React.createElement(_components.h4, null, \"5. Ação bem-sucedida\"), \"\\n\", React.createElement(_components.p, null, \"Se o jogador alvo do sangrar declinar o bloqueio e não redirecionar o bloqueio, ou fizer a ação falhar, estamos a um passo da ação ser considerada bem-sucedida. Nesse momento, abre-se uma janela para cartas que se utilizam da janela \", React.createElement(_components.em, null, \"bleed would be successful\"), \", como \", React.createElement(Card, {\n    name: \"Spying Mission\"\n  }), \" com \\\\OBF.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Quando a janela de \", React.createElement(_components.em, null, \"bleed would be successful\"), \" começa, já não há mais a possibilidade de ser jogar cartas de reação que afetam o sangrar. Isso significa que, se um servo com uma \", React.createElement(Card, {\n    name: \"Spying Mission\"\n  }), \" sangra um jogador para 2, o seu sangrar será aumentado para 4 após a janela para se jogar \", React.createElement(Card, {\n    name: \"Archon Investigation\"\n  }), \", impossibilitando a carta de ser jogada pelo jogador alvo.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Se após a janela \", React.createElement(_components.em, null, \"bleed would be successful\"), \" a ação de sangrar ainda for bem-sucedida, o jogador alvo perde recursos igual ao total do sangrar, e o jogador agente recebe a \", React.createElement(_components.strong, null, \"Vantagem\"), \", e uma nova janela é aberta, a de \", React.createElement(_components.em, null, \"successful bleed\"), \". É nessa janela que cartas como \", React.createElement(Card, {\n    name: \"Enkil Cog\"\n  }), \" são jogadas, e efeitos de vampiros como o da \", React.createElement(Card, {\n    name: \"Ilonka\"\n  }), \" são ativados.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Se o total do sangrar for 0, a ação é bem-sucedida, mas o sangrar não é!\"), \" O jogador agente não recebe a \", React.createElement(_components.strong, null, \"Vantagem\"), \", e a janela \", React.createElement(_components.em, null, \"sucessful bleed\"), \" não existe.\"), \"\\n\", React.createElement(_components.h4, null, \"6. Conclusão\"), \"\\n\", React.createElement(_components.p, null, \"Se você chegou até aqui, parabéns! Agora você sabe como proceder em todas as etapas da ação de sangrar (e muito do que é dito aqui pode ser extrapolado para outras ações diretas também). Como havia dito no início, é um processo muito mais complicado do que parece, cheio de janelas e situações especificas, e é importante entendermos como proceder da forma correta em todos os cenários. Espero que você tenha aprendido algo novo, sendo você um novato, ou um veterano com mais de 20 anos de \", React.createElement(_components.em, null, \"V:TES\"), \". Até a próxima!\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Notou algo de errado com o artigo? Regras de \", React.createElement(_components.em, null, \"V:TES\"), \" são complexas, e precisamos ter uma fonte centralizada para verificarmos quando for necessário. Se há algo de errado com os artigos de regra, por favor, entre em contato conosco para que possamos retificar o artigo e não espalhar informações equivocadas.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/blog/blog/transformed/sangrar/index.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children, React.createElement(\"hr\"), React.createElement(\"footer\", null, React.createElement(Bio))), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["MDXContext","useMDXComponents","components","contextComponents","props","React","className","name","_createMdxContent","_components","Object","assign","h1","p","em","strong","h3","blockquote","h4","ul","li","_provideComponents","Card","wrapper","MDXLayout","BlogPostTemplate","_ref","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","Head","_ref2","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}