{"version":3,"file":"component---src-pages-index-js-4a44af25b00556b49a1e.js","mappings":"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","sources":["webpack://blog/./src/stores/card.tsx","webpack://blog/./src/components/layout.js","webpack://blog/./src/components/seo.js","webpack://blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { createContext, useReducer } from \"react\";\n\ninterface ICard {\n  id: string;\n  name: string;\n  link: string;\n  show: boolean;\n}\n\n\ninterface ICardReducerHoverAction {\n  type: 'hover',\n  name: string;\n}\n\ninterface ICardReducerOpenAction {\n  type: 'open',\n}\n\ninterface ICardReducerCloseAction {\n  type: 'close',\n}\n\ntype ICardReducerAction = ICardReducerHoverAction | ICardReducerOpenAction | ICardReducerCloseAction; \n\n\nconst initialState: ICard = {\n  id: \"\",\n  name: \"\",\n  link: \"\",\n  show: false,\n};\n\nfunction normalizeId(text: string) {\n  if (!text) {\n    return undefined;\n  }\n  text = text.toLowerCase();\n  if (text.startsWith(\"the \")) {\n    text = text.slice(4) + \"the\";\n  }\n  return text\n    .replace(/™/g, \"tm\")\n    .replace(/\\s|,|\\.|-|—|'|’|:|\\(|\\)|\"|\\/| |!/g, \"\")\n    .replace(/ö|ó|ø/g, \"o\")\n    .replace(/é|ë|è/g, \"e\")\n    .replace(/œ/g, \"oe\")\n    .replace(/ç/g, \"c\")\n    .replace(/á|ã|å|ä|à/g, \"a\")\n    .replace(/í|î|ï/g, \"i\")\n    .replace(/ñ/g, \"n\")\n    .replace(/ü|ú/g, \"u\");\n}\n\nfunction cardLink(id: string) {\n  return `https://static.krcg.org/card/${id}.jpg`;\n}\n\nexport function cardReducer(state: ICard, action: ICardReducerAction) {\n  switch(action.type) {\n    case 'hover':\n      const id = normalizeId(action.name);\n      if (!id) return state;\n      return {\n        id,\n        name: action.name,\n        link: cardLink(id),\n        show: state.show\n      }\n    case 'open':\n      return {\n        ...state,\n        show: true\n      }\n    case 'close':\n      return {\n        ...state,\n        show: false\n      }\n  }\n}\n\nexport const stCard = {\n  val: createContext(null),\n  dispatch: createContext(null)\n};\n\nexport const CardProvider = ({ children }) => {\n  const [card, dispatch] = useReducer(cardReducer, initialState);\n\n  return (\n    <stCard.val.Provider value={card}>\n      <stCard.dispatch.Provider value={dispatch}>\n        {children}\n      </stCard.dispatch.Provider>\n    </stCard.val.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { CardProvider } from \"../stores\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  let header;\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <CardProvider>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n      </CardProvider>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMdx.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />;\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["initialState","id","name","link","show","cardLink","cardReducer","state","action","type","text","toLowerCase","startsWith","slice","replace","normalizeId","stCard","val","createContext","dispatch","CardProvider","_ref","children","card","useReducer","React","Provider","value","location","title","isRootPath","pathname","header","className","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","social","twitter","_data$site$siteMetada","data","siteTitle","posts","allMdx","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}